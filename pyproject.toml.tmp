[tool.poetry]
name = "dataframe_image"
version = "0.1.0"  # Adjust this to your actual version
description = "Embed pandas DataFrames as images in pdf and markdown files when converting from Jupyter Notebooks"
readme = "README.md"
authors = ["Ted Petrou <petrou.theodore@gmail.com>"]
license = "MIT"
homepage = "https://github.com/dexplo/dataframe_image"
keywords = ["jupyter", "notebook", "pandas", "dataframe", "image", "pdf", "markdown"]
classifiers = [
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

[tool.poetry.dependencies]
python = ">=3.8,<4.0"
pandas = ">=0.24"
nbconvert = ">=5"
aiohttp = "*"
requests = "*"
pillow = "*"
packaging = "*"
mistune = "*"
lxml = "*"
beautifulsoup4 = "*"
cssutils = "*"
html2image = "*"

[tool.poetry.group.dev.dependencies]
mypy = "^1.8.0"
pytest = "^8.0.2"
pytest-cov = "^4.1.0"
pyyaml = "^6.0.1"
ipykernel = "^6.29.4"
pytest-asyncio = "^0.23.6"

[tool.poetry.scripts]
dataframe_image = "dataframe_image._command_line:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry-dynamic-versioning]
enable = true

[tool.mypy]
strict = true
exclude = ["venv"]

[tool.pytest.ini_options]
asyncio_mode="auto"

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
ignore-init-module-imports = true
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "W191", # indentation contains tabs
    "B904", # Allow raising exceptions without from e, for HTTPException
    "C408", # Unnecessary dict call - dict literal
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 120

[tool.isort]
profile = "black"
